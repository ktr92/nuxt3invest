function getColor() {
  return `hsla(${~~(360 * Math.random())}, 70%,  88%, 0.8)`
}
export default function generateColors(count: number) {
 /*  const colors = []
  for (let i = count; i--; ) {
    colors.push(getColor())
  }

  console.log(colors) */

  return [
    "hsla(147, 70%,  88%, 0.8)",
    "hsla(87, 70%,  88%, 0.8)",
    "hsla(230, 70%,  88%, 0.8)",
    "hsla(309, 70%,  88%, 0.8)",
    "hsla(213, 70%,  88%, 0.8)",
    "hsla(20, 70%,  88%, 0.8)",
    "hsla(353, 70%,  88%, 0.8)",
    "hsla(125, 70%,  88%, 0.8)",
    "hsla(278, 70%,  88%, 0.8)",
    "hsla(102, 70%,  88%, 0.8)",
    "hsla(238, 70%,  88%, 0.8)",
    "hsla(6, 70%,  88%, 0.8)",
    "hsla(296, 70%,  88%, 0.8)",
    "hsla(16, 70%,  88%, 0.8)",
    "hsla(91, 70%,  88%, 0.8)",
    "hsla(86, 70%,  88%, 0.8)",
    "hsla(257, 70%,  88%, 0.8)",
    "hsla(104, 70%,  88%, 0.8)",
    "hsla(340, 70%,  88%, 0.8)",
    "hsla(264, 70%,  88%, 0.8)",
    "hsla(356, 70%,  88%, 0.8)",
    "hsla(109, 70%,  88%, 0.8)",
    "hsla(294, 70%,  88%, 0.8)",
    "hsla(305, 70%,  88%, 0.8)",
    "hsla(56, 70%,  88%, 0.8)",
    "hsla(72, 70%,  88%, 0.8)",
    "hsla(2, 70%,  88%, 0.8)",
    "hsla(203, 70%,  88%, 0.8)",
    "hsla(241, 70%,  88%, 0.8)",
    "hsla(96, 70%,  88%, 0.8)",
    "hsla(253, 70%,  88%, 0.8)",
    "hsla(171, 70%,  88%, 0.8)",
    "hsla(68, 70%,  88%, 0.8)",
    "hsla(178, 70%,  88%, 0.8)",
    "hsla(234, 70%,  88%, 0.8)",
    "hsla(15, 70%,  88%, 0.8)",
    "hsla(162, 70%,  88%, 0.8)",
    "hsla(88, 70%,  88%, 0.8)",
    "hsla(77, 70%,  88%, 0.8)",
    "hsla(90, 70%,  88%, 0.8)",
    "hsla(308, 70%,  88%, 0.8)",
    "hsla(281, 70%,  88%, 0.8)",
    "hsla(293, 70%,  88%, 0.8)",
    "hsla(283, 70%,  88%, 0.8)",
    "hsla(188, 70%,  88%, 0.8)",
    "hsla(206, 70%,  88%, 0.8)",
    "hsla(176, 70%,  88%, 0.8)",
    "hsla(175, 70%,  88%, 0.8)",
    "hsla(165, 70%,  88%, 0.8)",
    "hsla(256, 70%,  88%, 0.8)",
    "hsla(33, 70%,  88%, 0.8)",
    "hsla(87, 70%,  88%, 0.8)",
    "hsla(350, 70%,  88%, 0.8)",
    "hsla(293, 70%,  88%, 0.8)",
    "hsla(139, 70%,  88%, 0.8)",
    "hsla(248, 70%,  88%, 0.8)",
    "hsla(284, 70%,  88%, 0.8)",
    "hsla(254, 70%,  88%, 0.8)",
    "hsla(246, 70%,  88%, 0.8)",
    "hsla(262, 70%,  88%, 0.8)",
    "hsla(172, 70%,  88%, 0.8)",
    "hsla(122, 70%,  88%, 0.8)",
    "hsla(131, 70%,  88%, 0.8)",
    "hsla(24, 70%,  88%, 0.8)",
    "hsla(327, 70%,  88%, 0.8)",
    "hsla(259, 70%,  88%, 0.8)",
    "hsla(184, 70%,  88%, 0.8)",
    "hsla(221, 70%,  88%, 0.8)",
    "hsla(120, 70%,  88%, 0.8)",
    "hsla(298, 70%,  88%, 0.8)",
    "hsla(51, 70%,  88%, 0.8)",
    "hsla(143, 70%,  88%, 0.8)",
    "hsla(235, 70%,  88%, 0.8)",
    "hsla(269, 70%,  88%, 0.8)",
    "hsla(351, 70%,  88%, 0.8)",
    "hsla(315, 70%,  88%, 0.8)",
    "hsla(112, 70%,  88%, 0.8)",
    "hsla(28, 70%,  88%, 0.8)",
    "hsla(281, 70%,  88%, 0.8)",
    "hsla(181, 70%,  88%, 0.8)",
    "hsla(336, 70%,  88%, 0.8)",
    "hsla(93, 70%,  88%, 0.8)",
    "hsla(127, 70%,  88%, 0.8)",
    "hsla(21, 70%,  88%, 0.8)"
]
}
